/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conversorchallenge;

/**
 *
 * @author adr_e
 */
public class MenuMonedas extends javax.swing.JFrame {

    private double cantidad;
    /**
     * Creates new form MenuMonedas
     */
    public MenuMonedas() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ComboBoxMenu = new javax.swing.JComboBox<>();
        BtnOkMoneda = new javax.swing.JButton();
        BtnCancelarMoneda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monedas");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Elije la moneda a la que deseas convertir");

        ComboBoxMenu.setBackground(new java.awt.Color(204, 204, 204));
        ComboBoxMenu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ComboBoxMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "De Pesos a Dólar", "De Pesos a Euro", "De Pesos a Libras", "De Pesos a Yen", "De Pesos a Won Coreano", "De Dólar a Pesos", "De Euro a Pesos", "De Libras a Pesos", "De Yenes a Pesos", "De Won Coreano a Pesos" }));

        BtnOkMoneda.setBackground(new java.awt.Color(153, 153, 153));
        BtnOkMoneda.setText("OK");
        BtnOkMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnOkMonedaActionPerformed(evt);
            }
        });

        BtnCancelarMoneda.setBackground(new java.awt.Color(153, 153, 153));
        BtnCancelarMoneda.setText("Cancelar");
        BtnCancelarMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarMonedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComboBoxMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(BtnOkMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnCancelarMoneda)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnOkMoneda)
                    .addComponent(BtnCancelarMoneda))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnOkMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnOkMonedaActionPerformed
       ResultadoMoneda resultado = new ResultadoMoneda();
       int indice = ComboBoxMenu.getSelectedIndex();
       switch(indice){
           case 0:
               PesosDolares(resultado);
               siguienteVentana(resultado);
               break;
           case 1:
               PesosEuros(resultado);
               siguienteVentana(resultado);
               break;
           case 2:
               PesosLibras(resultado);
               siguienteVentana(resultado);
               break;
           case 3:
               PesosYen(resultado);
               siguienteVentana(resultado);
               break;
           case 4:
               PesosWon(resultado);
               siguienteVentana(resultado);
               break;
           case 5:
               DolaresPesos(resultado);
               siguienteVentana(resultado);
               break;
           case 6:
               EurosPesos(resultado);
               siguienteVentana(resultado);
               break;
           case 7:
               LibrasPesos(resultado);
               siguienteVentana(resultado);
               break;
           case 8:
               YenPesos(resultado);
               siguienteVentana(resultado);
               break;
           case 9:
               WonPesos(resultado);
               siguienteVentana(resultado);
               break;
           default:
               throw new RuntimeException();
    }
    }//GEN-LAST:event_BtnOkMonedaActionPerformed

    private void siguienteVentana(ResultadoMoneda resultado){
        resultado.setVisible(true);
        this.dispose();
    }
    private void PesosDolares(ResultadoMoneda resultado){
        double conversion = cantidad*0.053;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "$"+cantidadConvertir+" es igual a "+cantidadConvertida+"US$";
        resultado.capturarResultado(resultadoConversion);
    }
    private void PesosEuros(ResultadoMoneda resultado){
        double conversion = cantidad*0.049;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "$"+cantidadConvertir+" es igual a "+cantidadConvertida+"€";
        resultado.capturarResultado(resultadoConversion);
    }
    private void PesosLibras(ResultadoMoneda resultado){
        double conversion = cantidad*0.043;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "$"+cantidadConvertir+" es igual a "+cantidadConvertida+"£";
        resultado.capturarResultado(resultadoConversion);
    }
    private void PesosYen(ResultadoMoneda resultado){
        double conversion = cantidad*6.92;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "$"+cantidadConvertir+" es igual a "+cantidadConvertida+"¥";
        resultado.capturarResultado(resultadoConversion);
    }
    private void PesosWon(ResultadoMoneda resultado){
        double conversion = cantidad*65.50;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "$"+cantidadConvertir+" es igual a "+cantidadConvertida+"₩";
        resultado.capturarResultado(resultadoConversion);
    }
    private void DolaresPesos(ResultadoMoneda resultado){
        double conversion = cantidad*18.78;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "US$"+cantidadConvertir+" es igual a "+cantidadConvertida+"$";
        resultado.capturarResultado(resultadoConversion);
    }
    private void EurosPesos(ResultadoMoneda resultado){
        double conversion = cantidad*20.40;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "€"+cantidadConvertir+" es igual a "+cantidadConvertida+"$";
        resultado.capturarResultado(resultadoConversion);
    }
    private void LibrasPesos(ResultadoMoneda resultado){
        double conversion = cantidad*23.25;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "£"+cantidadConvertir+" es igual a "+cantidadConvertida+"$";
        resultado.capturarResultado(resultadoConversion);
    }
    private void YenPesos(ResultadoMoneda resultado){
        double conversion = cantidad*0.14;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "¥"+cantidadConvertir+" es igual a "+cantidadConvertida+"$";
        resultado.capturarResultado(resultadoConversion);
    }
    private void WonPesos(ResultadoMoneda resultado){
        double conversion = cantidad*0.015;
        String cantidadConvertir = Double.toString(cantidad);
        String cantidadConvertida = Double.toString(conversion);
        String resultadoConversion = "₩"+cantidadConvertir+" es igual a "+cantidadConvertida+"$";
        resultado.capturarResultado(resultadoConversion);
    }
    
    
    private void BtnCancelarMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarMonedaActionPerformed
        MenuConversor inicio = new MenuConversor();
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnCancelarMonedaActionPerformed

    public void recibirCantidad(double cantidad){
        this.cantidad = cantidad;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuMonedas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancelarMoneda;
    private javax.swing.JButton BtnOkMoneda;
    private javax.swing.JComboBox<String> ComboBoxMenu;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
